name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # (Recommended) Use AWS credentials action instead of manual aws configure
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE="${{ steps.ecr-login.outputs.registry }}/fantasybballstats"
          TAG="${{ github.sha }}"
          docker build -t "$IMAGE:$TAG" .

      # Only push images on pushes to main (skip for PRs)
      - name: Push Docker image to ECR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          IMAGE="${{ steps.ecr-login.outputs.registry }}/fantasybballstats"
          TAG="${{ github.sha }}"
          docker tag "$IMAGE:$TAG" "$IMAGE:latest"
          docker push "$IMAGE:$TAG"
          docker push "$IMAGE:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # ðŸš¦ Gate deployments so they only run on push to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            # Login to ECR on the instance
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

            IMAGE="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/fantasybballstats:latest"

            docker pull "$IMAGE"
            docker stop fantasy_scraper_container || true
            docker rm fantasy_scraper_container || true

            docker run -d --name fantasy_scraper_container -p 5000:5000 "$IMAGE"

            sudo systemctl restart nginx
